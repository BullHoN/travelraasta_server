{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/services/PassInfo.js","components/services/FlightCaro.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","PassInfo","state","adults","childs","infants","travelClass","handleFlightClassClick","e","setState","target","id","getCheckedVal","handleFlightClassChange","handlePassengersAddition","maxVal","handlePassengersSubtraction","submitTheFlightInfo","props","passInfo","className","onClick","this","checked","onChange","type","Component","autocompleteData","FlightCaro","isRoundTrip","fromCity","toCity","departDate","Date","returnDate","flightAndPassInfo","getFlightAndPassInfo","info","flightDropdown","close","handleChange","handleClick","submitFlightData","console","log","alert","window","screen","availWidth","flightCaro","document","querySelector","instance","Carousel","init","fullWidth","duration","setInterval","next","Autocomplete","data","limit","onAutocomplete","val","Datepicker","defaultDate","minDate","onSelect","selectedDate","flightInfo","getElementById","Dropdown","coverTrigger","constrainWidth","closeOnClick","travellersInfo","notravellers","href","name","placeholder","disabled","data-target"],"mappings":"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","file":"static/js/4.4d8102ed.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { Component } from 'react'\r\n\r\nclass PassInfo extends Component {\r\n\r\n    state = {\r\n        adults: 1,\r\n        childs: 0,\r\n        infants: 0,\r\n        travelClass: \"Economy\"\r\n    }\r\n\r\n    handleFlightClassClick = (e)=>{\r\n        this.setState({\r\n            travelClass: e.target.id\r\n        })\r\n    }\r\n\r\n    getCheckedVal = (id)=>{\r\n        if(this.state.travelClass === id) return true;\r\n        return false;\r\n    }\r\n\r\n    handleFlightClassChange = (e)=>{\r\n        \r\n    }\r\n\r\n    handlePassengersAddition = (e)=>{\r\n        let id = e.target.id;\r\n        let maxVal = 10;\r\n        if(id === \"infants\") maxVal = 3\r\n        if(id === \"childs\") maxVal = 8\r\n        this.setState({\r\n            [id]: this.state[id] + 1 < maxVal ? this.state[id] + 1 : this.state[id]\r\n        })\r\n    }\r\n\r\n    handlePassengersSubtraction = (e)=>{\r\n        let id = e.target.id;\r\n        this.setState({\r\n            [id]: this.state[id] - 1 < 1 ? this.state[id] : this.state[id] - 1\r\n        })\r\n    }\r\n\r\n    submitTheFlightInfo = ()=>{\r\n        this.props.passInfo(this.state);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"pass-info\" className=\"dropdown-content z-depth-2\">\r\n                <div id=\"pass-wrapper\">\r\n                    <div id=\"passengers\">\r\n                        <h6>Passengers</h6>\r\n                        <div id=\"passengers-list\">\r\n                            <h6>Adult (+12 yrs)</h6>\r\n                            <div className=\"val\">\r\n                                <button className=\"btn blue\" id=\"adults\" onClick={this.handlePassengersSubtraction}>-</button>\r\n                                <span>{ this.state.adults }</span>\r\n                                <button className=\"btn blue\" id=\"adults\" onClick={this.handlePassengersAddition}>+</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div id=\"passengers-list\">\r\n                            <h6>Child (2-12 yrs)</h6>\r\n                            <div className=\"val\">\r\n                                <button className=\"btn blue\" id=\"childs\" onClick={this.handlePassengersSubtraction}>-</button>\r\n                                <span>{ this.state.childs }</span>\r\n                                <button className=\"btn blue\" id=\"childs\" onClick={this.handlePassengersAddition}>+</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div id=\"passengers-list\">\r\n                            <h6>Infant (0-2 yrs)</h6>\r\n                            <div className=\"val\">\r\n                                <button className=\"btn blue\" id=\"infants\" onClick={this.handlePassengersSubtraction}>-</button>\r\n                                <span>{ this.state.infants }</span>\r\n                                <button className=\"btn blue\" id=\"infants\" onClick={this.handlePassengersAddition}>+</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div id=\"flight-class-info\">\r\n                        <h6>Travel class</h6>\r\n                        <div>\r\n                            <label>\r\n                                <input id=\"Economy\" className=\"with-gap valign-center\" checked={this.getCheckedVal(\"Economy\")} onClick={this.handleFlightClassClick} onChange={this.handleFlightClassChange} type=\"radio\" />\r\n                                <span>Economy</span>\r\n                            </label>\r\n                            <label>\r\n                                <input id=\"Premium Economy\" className=\"with-gap valign-center\" checked={this.getCheckedVal(\"Premium Economy\")} onClick={this.handleFlightClassClick} onChange={this.handleFlightClassChange} type=\"radio\"  />\r\n                                <span>Premium Economy</span>\r\n                            </label>\r\n\r\n                            <label>\r\n                                <input id=\"Business\" className=\"with-gap valign-center\" checked={this.getCheckedVal(\"Business\")} onClick={this.handleFlightClassClick} onChange={this.handleFlightClassChange} type=\"radio\" />\r\n                                <span>Business</span>\r\n                            </label>\r\n\r\n                            <label>\r\n                                <input id=\"First Class\" className=\"with-gap valign-center\" checked={this.getCheckedVal(\"First Class\")} onClick={this.handleFlightClassClick} onChange={this.handleFlightClassChange} type=\"radio\" />\r\n                                <span>First Class</span>\r\n                            </label>\r\n                        </div>\r\n                        <button className=\"btn blue waves-effect\" id=\"apply\" onClick={this.submitTheFlightInfo} >Apply</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PassInfo\r\n","import React, { Component } from 'react'\r\nimport { Carousel, Autocomplete, Datepicker, Dropdown } from 'materialize-css/dist/js/materialize.min.js'\r\nimport PassInfo from './PassInfo'\r\n\r\nlet autocompleteData = {\r\n    \"Goa\": null,\r\n    \"Varanasi\": null,\r\n    \"Mumbai ( Shivaji Maharaj Airport )\": null,\r\n    \"Delhi ( Delhi International Airport )\": null\r\n}\r\n\r\nclass FlightCaro extends Component {\r\n\r\n    state = {\r\n        isRoundTrip: true,\r\n        fromCity: '',\r\n        toCity: '',\r\n        departDate: new Date(),\r\n        returnDate: new Date(),\r\n        flightAndPassInfo: {\r\n            adults: 1,\r\n            childs: 0,\r\n            infants: 0,\r\n            travelClass: \"Economy\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(window.screen.availWidth > 750){\r\n            const flightCaro = document.querySelector('.flight-caro');\r\n            let instance = Carousel.init(flightCaro,{\r\n                fullWidth: true,\r\n                duration: 400\r\n            })\r\n\r\n            setInterval(()=>{\r\n                instance.next()\r\n            },6000)\r\n        }\r\n\r\n        var fromCity = document.querySelector('.fromCity');\r\n        Autocomplete.init(fromCity,{\r\n            data: autocompleteData,\r\n            limit: 4,\r\n            onAutocomplete: (val)=>{\r\n                this.setState({\r\n                    fromCity: val\r\n                })\r\n            }\r\n        })\r\n\r\n        var toCity = document.querySelector('.toCity');\r\n        Autocomplete.init(toCity,{\r\n            data: autocompleteData,\r\n            limit: 4,\r\n            onAutocomplete: (val)=>{\r\n                this.setState({\r\n                    toCity: val\r\n                })\r\n            }\r\n        })\r\n\r\n        var departDate = document.querySelector('.departDate');\r\n        Datepicker.init(departDate,{\r\n            defaultDate: new Date(),\r\n            minDate: new Date(),\r\n            onSelect: (selectedDate)=>{\r\n                this.setState({\r\n                    departDate: selectedDate\r\n                });\r\n            }\r\n        })\r\n\r\n        var returnDate = document.querySelector('.returnDate');\r\n        Datepicker.init(returnDate,{\r\n            defaultDate: new Date(),\r\n            minDate: new Date(),\r\n            onSelect: (selectedDate)=>{\r\n                this.setState({\r\n                    returnDate: selectedDate\r\n                })\r\n                console.log(this.state);\r\n            }\r\n        })\r\n\r\n        var flightInfo = document.getElementById('flight-info');\r\n        this.flightDropdown =  Dropdown.init(flightInfo,{\r\n            coverTrigger: false,\r\n            constrainWidth: false,\r\n            closeOnClick: false\r\n        })\r\n\r\n    }\r\n\r\n    getFlightAndPassInfo = (info)=>{\r\n        this.setState({\r\n            flightAndPassInfo: info\r\n        })\r\n        this.flightDropdown.close();\r\n    }\r\n\r\n    handleChange = ()=>{\r\n        this.setState({\r\n            isRoundTrip: !this.state.isRoundTrip\r\n        })\r\n    }\r\n\r\n    handleClick = ()=>{\r\n\r\n    }\r\n\r\n    submitFlightData = ()=>{\r\n        if(this.state.fromCity === '' || this.state.toCity === ''){\r\n            alert('Please Fill In All The Details')\r\n            return;\r\n        }\r\n        console.log(this.state);\r\n    }\r\n\r\n    render(){\r\n        let travellersInfo = this.state.flightAndPassInfo\r\n        let notravellers = travellersInfo.adults + travellersInfo.childs + travellersInfo.infants; \r\n        return (\r\n            <div id=\"flight-booking\">\r\n                <div className=\"carousel carousel-silder default-caro flight-caro\">\r\n                    <a className=\"carousel-item\" href=\"#one!\">\r\n                        <div className=\"caro-item\" id=\"caro-1\"></div>\r\n                    </a>\r\n                    <a className=\"carousel-item\" href=\"#two!\">\r\n                        <div className=\"caro-item\" id=\"caro-2\"></div>\r\n                    </a>\r\n                    <a className=\"carousel-item\" href=\"#three!\">\r\n                        <div className=\"caro-item\" id=\"caro-3\"></div>\r\n                    </a>  \r\n                </div>     \r\n\r\n                <div id=\"flight-model\" className=\"container\">\r\n                    <div id=\"flight-model-content\">\r\n                        <div id=\"flight-iconBox\">\r\n                            <i className=\"material-icons\">flight_takeoff</i>\r\n                            <span>FLIGHTS</span>\r\n                        </div>\r\n\r\n                        <div id=\"options\">\r\n                            <label>\r\n                                <input className=\"with-gap\" onChange={this.handleClick} onClick={this.handleChange} name=\"one-way\" type=\"radio\" checked={this.state.isRoundTrip} />\r\n                                <span>Round Trip</span>\r\n                            </label>\r\n\r\n                            <label>\r\n                                <input className=\"with-gap\" onChange={this.handleClick} onClick={this.handleChange} name=\"one-way\" type=\"radio\" checked={!this.state.isRoundTrip} />\r\n                                <span>One Way</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12 m9\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12 m4\">\r\n                                        <i className=\"material-icons prefix\">flight_takeoff</i>\r\n                                        <input type=\"text\" id=\"form-city-input\" className=\"autocomplete fromCity\" placeholder=\"From City\"></input>\r\n                                    </div>\r\n\r\n                                    <div className=\"input-field col s12 m4\">\r\n                                        <i className=\"material-icons prefix\">flight_land</i>\r\n                                        <input type=\"text\" id=\"to-city-input\" className=\"autocomplete toCity\" placeholder=\"To City\"></input>\r\n                                    </div>\r\n\r\n                                    <div className=\"input-field col s12 m4\">\r\n                                        <i className=\"material-icons prefix\">date_range</i>\r\n                                        <input type=\"text\" className=\"datepicker departDate\" placeholder=\"Depart Date\"></input>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12 m4\">\r\n                                        <i className=\"material-icons prefix\">date_range</i>\r\n                                        <input type=\"text\" className=\"datepicker returnDate\" placeholder=\"Return Date\" disabled={!this.state.isRoundTrip}></input>\r\n                                    </div>\r\n\r\n                                    <div id=\"flight-info\" className=\"col s12 m4 dropdown-trigger\" data-target='pass-info'>\r\n                                        <span>{ notravellers } Travellers, { travellersInfo.travelClass }</span>\r\n                                        <i className=\"material-icons\">person</i>\r\n                                    </div>\r\n\r\n                                    <PassInfo passInfo={this.getFlightAndPassInfo} />\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"col s12 m2 offset-m1\">\r\n                                <button onClick={this.submitFlightData} className=\"waves-effect waves-light btn blue\" id=\"search\">Search</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FlightCaro\r\n"],"sourceRoot":""}
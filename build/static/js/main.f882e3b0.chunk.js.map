{"version":3,"sources":["components/layout/Navbar.js","components/layout/LayoutWrapper.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","useEffect","sideNav","document","querySelectorAll","M","Sidenav","init","destinationDropDown","Dropdown","hover","coverTrigger","constrainWidth","className","href","src","alt","data-target","to","id","Activities","lazy","Destinations","Subscribe","Packages","Testimonials","PlanTourInfo","Services","BlogsView","loading","LayoutWrapper","fallback","DefaultCarousel","FlightCaro","TourCaro","HotelCaro","EventCaro","GuideCaro","BusCaro","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f882e3b0.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\nimport { withRouter, Link } from 'react-router-dom'\r\n\r\nfunction Navbar() {\r\n\r\n    useEffect(()=>{\r\n        var sideNav = document.querySelectorAll('.sidenav');\r\n        M.Sidenav.init(sideNav, {});        \r\n\r\n        let destinationDropDown = document.querySelectorAll('.dropdown-trigger');\r\n        M.Dropdown.init(destinationDropDown, {\r\n            hover: true,\r\n            coverTrigger: false,\r\n            constrainWidth: false\r\n        });\r\n\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"navbar-fixed\">\r\n                <nav className=\"nav-wrapper grey lighten-5\">\r\n                    <div className=\"container\">\r\n                        <a href=\"/\" className=\"brand-logo left\" >\r\n                            <img src=\"/images/main_logo.png\" alt=\"Logo\" />\r\n                        </a>\r\n                        <a data-target=\"mobile-demo\" className=\"sidenav-trigger right blue-text\"><i className=\"material-icons\">menu</i></a>\r\n                        <ul className=\"right hide-on-med-and-down\">\r\n                            <li><Link to=\"/\">Home</Link></li> \r\n                            <li><a className=\"dropdown-trigger valign-wrapper\"  data-target=\"destinationdropdown\">Destinations<i className=\"material-icons right drop-icon\">arrow_drop_down</i></a></li> \r\n                            <li><a href=\"/\">Blogs</a></li>\r\n                            <li><a href=\"/\">About</a></li>\r\n                            <li><a href=\"/\">Contact</a></li>\r\n                            <li><a href=\"tel: +919532455040\" className=\"valign-wrapper\"><i className=\"material-icons left call-icon\">call</i>+91 9532455040</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n\r\n            <div id=\"destinationdropdown\" className=\"dropdown-content row\">\r\n                <div className=\"col sm-6 left\">\r\n                    <h6 className=\"black-text\">Indian Destinations</h6> \r\n                    <div className=\"row\">\r\n                        <div className=\"col sm-4 left\">\r\n                            <a href=\"/\">Manali</a>\r\n                            <a href=\"/\">Mumbai</a>\r\n                            <a href=\"/\">Varanasi</a>\r\n                        </div>\r\n                        <div className=\"col sm-6 right\">\r\n                            <a href=\"/\">Goa</a>\r\n                            <a href=\"/\" className=\"red-text\">View all</a>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n                <div className=\"col sm-5\">\r\n                    <h6 className=\"black-text\">International Destinations</h6>  \r\n                    <div className=\"row\">\r\n                        <div className=\"col sm-4 left\">\r\n                            <a href=\"/\">Dubai</a>\r\n                            <a href=\"/\">Thailand</a>\r\n                            <a href=\"/\" className=\"red-text\">View all</a>\r\n                        </div>\r\n                        <div className=\"col sm-4 right\">\r\n                            <a href=\"/\">Itlay</a>\r\n                        </div>\r\n                    </div>\r\n                </div>           \r\n\r\n            </div>\r\n\r\n            <ul className=\"sidenav collection with-header\" id=\"mobile-demo\">\r\n                <li className=\"collection-header center\">\r\n                    <img src=\"/images/secondary_logo.png\" id=\"sidenav-image\" alt=\"second logo\" />\r\n                    <h5>!! Hi, There !!</h5>\r\n                    <a href=\"tel: +919532455040\" className=\"valign-wrapper\">( +91 9532455040 )</a>\r\n                </li>\r\n                <li className=\"collection-item\"><Link to=\"/\">Home</Link></li>\r\n                <li className=\"collection-item\"><a href=\"/\">Destination</a></li>\r\n                <li className=\"collection-item\"><a href=\"/\">About</a></li>\r\n                <li className=\"collection-item\"><a href=\"/\">Contact</a></li>\r\n                <li className=\"collection-item\"><a href=\"/\">Blogs</a></li>\r\n            </ul>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navbar)\r\n","import React, { Suspense, lazy } from 'react'\r\n// import Activities from './Activities';\r\n// import Destinations from './Destinations'\r\n// import Subscribe from './Subscribe'\r\n// import Packages from './Packages'\r\n// import Testimonials from './Testimonials'\r\n// import PlanTourInfo from './PlanTourInfo'\r\n// import Services from './Services'\r\n// import BlogsView from './BlogsView'\r\n\r\n\r\nconst Activities = lazy(()=> import('./Activities'));\r\nconst Destinations = lazy(()=> import('./Destinations'));\r\nconst Subscribe = lazy(()=> import('./Subscribe'));\r\nconst Packages = lazy(()=> import('./Packages'));\r\nconst Testimonials = lazy(()=> import('./Testimonials'));\r\nconst PlanTourInfo = lazy(()=> import('./PlanTourInfo'));\r\nconst Services = lazy(()=> import('./Services'));\r\nconst BlogsView = lazy(()=> import('./BlogsView'))\r\n\r\nlet loading = (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\">\r\n      \r\n      </div>\r\n    </div>\r\n  )\r\n\r\nfunction LayoutWrapper() {\r\n    return (\r\n        <div>\r\n            <Suspense fallback={loading}>\r\n                <Activities />\r\n                <Destinations />\r\n                <Subscribe />\r\n                <Packages />\r\n                <Testimonials />\r\n                <PlanTourInfo />\r\n                <Services />\r\n                <BlogsView />\r\n            </Suspense>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LayoutWrapper\r\n","import React, { Suspense, lazy } from 'react';\nimport Navbar from './components/layout/Navbar'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport LayoutWrapper from './components/layout/LayoutWrapper'\n\nconst DefaultCarousel = lazy(()=> import('./components/layout/DefaultCarousel'))\nconst FlightCaro = lazy(()=> import('./components/services/FlightCaro'))\nconst TourCaro = lazy(()=> import('./components/services/TourCaro'))\nconst HotelCaro = lazy(()=> import('./components/services/HotelCaro'))\nconst EventCaro = lazy(()=> import('./components/services/EventCaro'))\nconst GuideCaro = lazy(()=> import('./components/services/GuideCaro'))\nconst BusCaro = lazy(()=> import('./components/services/BusCaro'))\n\nlet loading = (\n  <div className=\"loader-container\">\n    <div className=\"loader\">\n    \n    </div>\n  </div>\n)\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Suspense fallback={loading}>\n          <Switch>\n            <Route exact path=\"/\" component={DefaultCarousel} />\n            <Route path=\"/flights\" component={FlightCaro} />\n            <Route path=\"/tours\" component={TourCaro} />\n            <Route path=\"/hotels\" component={HotelCaro} />\n            <Route path=\"/guide\" component={GuideCaro} />\n            <Route path=\"/events\" component={EventCaro} />\n            <Route path=\"/bus\" component={BusCaro} />\n          </Switch>\n        </Suspense>\n        <LayoutWrapper />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'materialize-css/dist/css/materialize.min.css'\n\nimport './css/navbar.css'\nimport './css/layout.css'\nimport './css/activities.css'\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}